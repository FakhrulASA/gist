@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun OutlinedTextFieldCustom(
    hint: String,
    isPasswordField: Boolean = false,
    onTextChange: (String) -> Unit,

) {
    var fieldValue by remember { mutableStateOf("") }
    var passwordVisible by remember { mutableStateOf(false) }

    OutlinedTextField(
        value = fieldValue,
        onValueChange = {
            onTextChange.invoke(it)
            fieldValue = it
        },
        label = { Text(hint) },
        keyboardOptions = KeyboardOptions(
            keyboardType = if (isPasswordField) KeyboardType.Password else KeyboardType.Text
        ),
        visualTransformation = if (isPasswordField && !passwordVisible) PasswordVisualTransformation() else VisualTransformation.None,
        trailingIcon = {
            if (isPasswordField) {
                val image = if (passwordVisible) Icons.Filled.Edit else Icons.Filled.Lock
                IconButton(onClick = { passwordVisible = !passwordVisible }) {
                    Icon(imageVector = image, contentDescription = if (passwordVisible) "Hide password" else "Show password")
                }
            }
        },
        modifier = Modifier.fillMaxWidth(),
        colors = OutlinedTextFieldDefaults.colors(
            focusedBorderColor = MyYellowColor,
            focusedLabelColor = MyYellowColor,
            unfocusedBorderColor = Color.White
        )
    )
}
